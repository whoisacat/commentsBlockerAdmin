version: '3'
services:
  admin:
    container_name: blocker_admin
    image: whoisacat/ura_comments_blocker_admin:kafka_test
    privileged: true
    ports:
      - "8081:8081"
    environment:
      - DB_DRIVER=org.postgresql.Driver
      - DB_URL=jdbc:postgresql://db:5432/comments_blocker_admin_db
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - WAIT_FOR=postgres:5432
    depends_on:
      - db
      - kafka
    networks:
      - comments_blocker_network
    healthcheck:
      test: [ "CMD", "curl", "-f", "localhost:8081/up" ]
      interval: 5s
      timeout: 10s
      retries: 300
  updater:
    container_name: blocker_updater
    image: whoisacat/ura_comments_blocker_updater:kafka_test
    privileged: true
    ports:
      - "8082:8082"
    environment:
      - DB_DRIVER=org.postgresql.Driver
      - DB_URL=jdbc:postgresql://db:5432/comments_blocker_admin_db
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - WAIT_FOR=admin:8081
    restart: on-failure
    depends_on:
      - admin
      - kafka
    volumes:
      - /Users/whoisacat/Projects/own/tmp:/blocker_files
    networks:
      - comments_blocker_network
  db:
    container_name: blocker_db
    image: postgres:12
    ports:
      - "5439:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=comments_blocker_admin_db
    networks:
      - comments_blocker_network
    volumes:
      - db_data:/var/lib/postgresql/data
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0.arm64
    container_name: zookeeper-jboot
    healthcheck:
      test: "[[ $$(echo srvr | nc localhost 2181 | grep -oG 'Mode: standalone') = \"Mode: standalone\" ]]"
      interval: 10s
      timeout: 1s
      retries: 30
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_secrets:/etc/zookeeper/secrets
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_log:/var/lib/zookeeper/log
    networks:
      - comments_blocker_network
  kafka:
    image: confluentinc/cp-kafka:7.3.0.arm64
    container_name: kafka-jboot
    depends_on:
      - zookeeper
    healthcheck:
      test: "test $$( /usr/bin/zookeeper-shell zookeeper:2181 get /brokers/ids/1 | grep { ) != ''"
      interval: 3s
      timeout: 2s
      retries: 300
    ports:
      - "9092:9092"
      - "9091:9091"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9091
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
    networks:
      - comments_blocker_network
    volumes:
      - kafka_secrets:/etc/kafka/secrets
      - kafka_data:/var/lib/kafka/data
networks:
  comments_blocker_network:
    driver: bridge
volumes:
  db_data:
  kafka_data:
  kafka_secrets:
  zookeeper_secrets:
  zookeeper_data:
  zookeeper_log: